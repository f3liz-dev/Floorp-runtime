# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

on:
  workflow_call:
    inputs:
      debug:
        type: boolean
        default: true
      profile-generate-mode:
        type: boolean
        default: false
      pgo_artifact_name:
        type: string
        required: false

jobs:
  win-build:
    runs-on: ubuntu-latest
    steps:
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "latest"
    - uses: actions/checkout@v4
      name: Clone üß¨
      with:
        submodules: "recursive"

    # - name: Configure sccache
    #   uses: actions/github-script@v7
    #   with:
    #     script: |
    #       core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
    #       core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: setup Rust ü¶Ä
      run: |
        # # Install Rust if pgo_artifact_name is not empty
        # if [[ -n $GHA_pgo_artifact_name ]]; then
        #   rustup toolchain install 1.81.0
        #   rustup default 1.81.0
        # fi

        rustup target add x86_64-pc-windows-msvc
        rustc --version --verbose
        #? https://github.com/mozilla/sccache#known-caveats
        export CARGO_INCREMENTAL=0
      env:
        GHA_pgo_artifact_name: ${{inputs.pgo_artifact_name}}

    - name: Allocate swap
      run: |
        echo Before:
        free -h
        df -h

        echo
        echo

        sudo swapoff /mnt/swapfile
        sudo rm /mnt/swapfile
        sudo fallocate -l 25G /mnt/swapfile
        sudo chmod 600 /mnt/swapfile
        sudo mkswap /mnt/swapfile
        sudo swapon /mnt/swapfile

        sudo apt autoremove -y
        sudo apt clean
        sudo rm -rf  ./git
        sudo rm -rf /home/linuxbrew
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/local/graalvm
        sudo rm -rf /usr/local/share/powershell
        sudo rm -rf /usr/local/share/chromium
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf /etc/apache2
        sudo rm -rf /etc/nginx
        sudo rm -rf /usr/local/share/chrome_driver
        sudo rm -rf /usr/local/share/edge_driver
        sudo rm -rf /usr/local/share/gecko_driver
        sudo rm -rf /usr/share/java
        sudo rm -rf /usr/share/miniconda
        sudo rm -rf /usr/local/share/vcpkg


        echo
        echo

        echo After:
        free -h
        df -h

    - name: Download PGO Artifact if exists
      if: inputs.pgo_artifact_name
      uses: actions/download-artifact@v4
      with:
        name: ${{inputs.pgo_artifact_name}}
        path: ~/artifacts

    - name: Setup ü™õ
      run: |
        cd $GITHUB_WORKSPACE

        cp ./.github/workflows/mozconfigs/win64.mozconfig mozconfig

        # Copy Floorp Branding
        cp -r ./floorp/gecko/branding/* ./browser/branding/

        # Set Branding
        echo "ac_add_options --with-branding=browser/branding/floorp-official" >> mozconfig

        sudo apt install msitools -y

        # Set Flat Chrome
        echo "ac_add_options --enable-chrome-format=flat" >> mozconfig

        # SCCACHE START
        # echo "mk_add_options 'export RUSTC_WRAPPER=/home/runner/.mozbuild/sccache/sccache'" >> mozconfig
        # echo "mk_add_options 'export CCACHE_CPP2=yes'" >> mozconfig
        # echo "ac_add_options --with-ccache=/home/runner/.mozbuild/sccache/sccache" >> mozconfig
        # echo "mk_add_options 'export SCCACHE_GHA_ENABLED=on'" >> mozconfig
        # SCCACHE END


        if [[ $GHA_debug == 'true' ]]; then
          echo "ac_add_options --enable-debug" >> mozconfig
          echo "ac_add_options RUSTC_OPT_LEVEL=3" >> mozconfig
          git apply --ignore-space-change  --reject --ignore-whitespace .github/patches/dev/*.patch
        fi

        # PGO START
        if [[ $GHA_profgen == 'true' ]]; then
          echo 'ac_add_options --enable-profile-generate=cross' >> mozconfig
        elif [[ -n $GHA_pgo_artifact_name ]]; then
        # https://searchfox.org/mozilla-central/source/build/mozconfig.common#26
          echo 'export MOZ_LTO=cross' >> mozconfig
          echo 'ac_add_options --enable-profile-use=cross' >> mozconfig
          echo 'ac_add_options --with-pgo-profile-path=$(echo ~)/artifacts/merged.profdata' >> mozconfig
          echo 'ac_add_options --with-pgo-jarlog=$(echo ~)/artifacts/en-US.log' >> mozconfig
        fi
        # PGO END

        # Update Channel
        echo "ac_add_options --enable-update-channel=release" >> mozconfig
        echo "ac_add_options --with-version-file-path=floorp/gecko/config" >> mozconfig
        sed -i 's|https://@MOZ_APPUPDATE_HOST@/update/6/%PRODUCT%/%VERSION%/%BUILD_ID%/%BUILD_TARGET%/%LOCALE%/%CHANNEL%/%OS_VERSION%/%SYSTEM_CAPABILITIES%/%DISTRIBUTION%/%DISTRIBUTION_VERSION%/update.xml|https://%NORA_UPDATE_HOST%update.xml|g' ./build/application.ini.in

        ./mach --no-interactive bootstrap --application-choice browser
      env:
        GHA_debug: ${{inputs.debug}}
        GHA_profgen: ${{inputs.profile-generate-mode}}
        GHA_pgo_artifact_name: ${{inputs.pgo_artifact_name}}

    - name: Mach Configure
      run: |
        ./mach configure

    - name: Build üî®
      run: |

        ./mach build
        ./mach package
        rm -rf ~/.cargo

    # Publish START
    # Remove same name uploaded artifacts
    - name: Remove same name uploaded artifacts
      uses: geekyeggo/delete-artifact@v5
      with:
        name: |
          floorp-win-amd64-moz-artifact
          dist-host
          application-ini

    - name: extract moz-artifact
      run: |
        mkdir ~/artifact
        unzip obj-x86_64-pc-windows-msvc/dist/floorp-*win64.zip -d ~/artifact

        # Create nora-build-id.txt
        cp ./obj-x86_64-pc-windows-msvc/dist/bin/application.ini ./nora-application.ini

    - name: Publish Package Mozilla Artifact üéÅ
      uses: actions/upload-artifact@v4
      with:
        name: floorp-win-amd64-moz-artifact
        path: ~/artifact/

    - name: Publish dist/* for generate profile
      if: inputs.profile-generate-mode
      uses: actions/upload-artifact@v4
      with:
        name: floorp-win-amd64-profile-generate-mode-package
        path: obj-x86_64-pc-windows-msvc/dist/

    - name: Publish dist/host for MAR
      uses: actions/upload-artifact@v4
      with:
        name: win-amd64-dist-host
        path: obj-x86_64-pc-windows-msvc/dist/host/
        overwrite: true

    - name: Publish nora-application.ini for MAR
      uses: actions/upload-artifact@v4
      with:
        name: win-amd64-application-ini
        path: ./nora-application.ini
        overwrite: true
    # Publish END
